foreign fn pass_int(i: int) -> int

foreign fn pass_bool(i: bool) -> bool

foreign fn pass_void(v: void) -> void

foreign fn pass_string(s: string) -> string

foreign fn pass_struct(s: MyStruct) -> MyStruct

foreign fn pass_enum(e: MyEnum) -> MyEnum

foreign fn pass_tuple(e: (bool, int, string)) -> (bool, int, string)

foreign fn pass_maybe(m: maybe<string, int>) -> maybe<string, int>

type MyStruct = {
    i: int
    b: bool
    v: void
    s: string
}

type MyEnum =
    | Int of int
    | Bool of bool
    | Void
    | String of string


// TODO: foreign type file
